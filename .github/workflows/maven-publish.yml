# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on: workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - uses: s4u/maven-settings-action@v3.0.0
      with:
        servers: |
          [{
            "id": "central", 
            "username": "${{ secrets.OSSRH_USERNAME }}", 
            "password": "${{ secrets.OSSRH_TOKEN }}"
          }]
    - name: Change version to release
      run: mvn versions:set -DremoveSnapshot
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Publish package
      run: mvn --batch-mode deploy -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
    - name: GIT commit release version
      env: 
        CI_COMMIT_MESSAGE: "[Creating Release] ${{ github.event.release.tag_name }}"
        CI_COMMIT_AUTHOR: "Victor Osorio"
        CI_COMMIT_EMAIL: "victor.perticarrari@gmail.com"
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
        git add pom.xml **/pom.xml
        git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
        git tag -a ${{ env.RELEASE_VERSION }} -m "${{ env.CI_COMMIT_MESSAGE }}"
    - name: Increase version
      run: mvn versions:set -DnextSnapshot
    - name: GIT commit snapshot version
      env: 
        CI_COMMIT_MESSAGE: "[Creating Snapshot] ${{ github.event.release.tag_name }}"
        CI_COMMIT_AUTHOR: "Victor Osorio"
        CI_COMMIT_EMAIL: "victor.perticarrari@gmail.com"
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
        git add pom.xml **/pom.xml
        git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
        git push origin ${{ github.ref_name }}
        git push origin tag ${{ env.RELEASE_VERSION }}
