package model;
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: PricingData.proto
// Protobuf Java Version: 4.28.2

public final class PricingDataOuterClass {
  private PricingDataOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      PricingDataOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PricingDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PricingData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>float price = 2;</code>
     * @return The price.
     */
    float getPrice();

    /**
     * <code>sint64 time = 3;</code>
     * @return The time.
     */
    long getTime();

    /**
     * <code>string currency = 4;</code>
     * @return The currency.
     */
    java.lang.String getCurrency();
    /**
     * <code>string currency = 4;</code>
     * @return The bytes for currency.
     */
    com.google.protobuf.ByteString
        getCurrencyBytes();

    /**
     * <code>string exchange = 5;</code>
     * @return The exchange.
     */
    java.lang.String getExchange();
    /**
     * <code>string exchange = 5;</code>
     * @return The bytes for exchange.
     */
    com.google.protobuf.ByteString
        getExchangeBytes();

    /**
     * <code>.PricingData.QuoteType quoteType = 6;</code>
     * @return The enum numeric value on the wire for quoteType.
     */
    int getQuoteTypeValue();
    /**
     * <code>.PricingData.QuoteType quoteType = 6;</code>
     * @return The quoteType.
     */
    PricingDataOuterClass.PricingData.QuoteType getQuoteType();

    /**
     * <code>.PricingData.MarketHoursType marketHours = 7;</code>
     * @return The enum numeric value on the wire for marketHours.
     */
    int getMarketHoursValue();
    /**
     * <code>.PricingData.MarketHoursType marketHours = 7;</code>
     * @return The marketHours.
     */
    PricingDataOuterClass.PricingData.MarketHoursType getMarketHours();

    /**
     * <code>float changePercent = 8;</code>
     * @return The changePercent.
     */
    float getChangePercent();

    /**
     * <code>sint64 dayVolume = 9;</code>
     * @return The dayVolume.
     */
    long getDayVolume();

    /**
     * <code>float dayHigh = 10;</code>
     * @return The dayHigh.
     */
    float getDayHigh();

    /**
     * <code>float dayLow = 11;</code>
     * @return The dayLow.
     */
    float getDayLow();

    /**
     * <code>float change = 12;</code>
     * @return The change.
     */
    float getChange();

    /**
     * <code>string shortName = 13;</code>
     * @return The shortName.
     */
    java.lang.String getShortName();
    /**
     * <code>string shortName = 13;</code>
     * @return The bytes for shortName.
     */
    com.google.protobuf.ByteString
        getShortNameBytes();

    /**
     * <code>sint64 expireDate = 14;</code>
     * @return The expireDate.
     */
    long getExpireDate();

    /**
     * <code>float openPrice = 15;</code>
     * @return The openPrice.
     */
    float getOpenPrice();

    /**
     * <code>float previousClose = 16;</code>
     * @return The previousClose.
     */
    float getPreviousClose();

    /**
     * <code>float strikePrice = 17;</code>
     * @return The strikePrice.
     */
    float getStrikePrice();

    /**
     * <code>string underlyingSymbol = 18;</code>
     * @return The underlyingSymbol.
     */
    java.lang.String getUnderlyingSymbol();
    /**
     * <code>string underlyingSymbol = 18;</code>
     * @return The bytes for underlyingSymbol.
     */
    com.google.protobuf.ByteString
        getUnderlyingSymbolBytes();

    /**
     * <code>sint64 openInterest = 19;</code>
     * @return The openInterest.
     */
    long getOpenInterest();

    /**
     * <code>.PricingData.OptionType optionsType = 20;</code>
     * @return The enum numeric value on the wire for optionsType.
     */
    int getOptionsTypeValue();
    /**
     * <code>.PricingData.OptionType optionsType = 20;</code>
     * @return The optionsType.
     */
    PricingDataOuterClass.PricingData.OptionType getOptionsType();

    /**
     * <code>sint64 miniOption = 21;</code>
     * @return The miniOption.
     */
    long getMiniOption();

    /**
     * <code>sint64 lastSize = 22;</code>
     * @return The lastSize.
     */
    long getLastSize();

    /**
     * <code>float bid = 23;</code>
     * @return The bid.
     */
    float getBid();

    /**
     * <code>sint64 bidSize = 24;</code>
     * @return The bidSize.
     */
    long getBidSize();

    /**
     * <code>float ask = 25;</code>
     * @return The ask.
     */
    float getAsk();

    /**
     * <code>sint64 askSize = 26;</code>
     * @return The askSize.
     */
    long getAskSize();

    /**
     * <code>sint64 priceHint = 27;</code>
     * @return The priceHint.
     */
    long getPriceHint();

    /**
     * <code>sint64 vol_24hr = 28;</code>
     * @return The vol24hr.
     */
    long getVol24Hr();

    /**
     * <code>sint64 volAllCurrencies = 29;</code>
     * @return The volAllCurrencies.
     */
    long getVolAllCurrencies();

    /**
     * <code>string fromcurrency = 30;</code>
     * @return The fromcurrency.
     */
    java.lang.String getFromcurrency();
    /**
     * <code>string fromcurrency = 30;</code>
     * @return The bytes for fromcurrency.
     */
    com.google.protobuf.ByteString
        getFromcurrencyBytes();

    /**
     * <code>string lastMarket = 31;</code>
     * @return The lastMarket.
     */
    java.lang.String getLastMarket();
    /**
     * <code>string lastMarket = 31;</code>
     * @return The bytes for lastMarket.
     */
    com.google.protobuf.ByteString
        getLastMarketBytes();

    /**
     * <code>double circulatingSupply = 32;</code>
     * @return The circulatingSupply.
     */
    double getCirculatingSupply();

    /**
     * <code>double marketcap = 33;</code>
     * @return The marketcap.
     */
    double getMarketcap();
  }
  /**
   * Protobuf type {@code PricingData}
   */
  public static final class PricingData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PricingData)
      PricingDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        PricingData.class.getName());
    }
    // Use PricingData.newBuilder() to construct.
    private PricingData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PricingData() {
      id_ = "";
      currency_ = "";
      exchange_ = "";
      quoteType_ = 0;
      marketHours_ = 0;
      shortName_ = "";
      underlyingSymbol_ = "";
      optionsType_ = 0;
      fromcurrency_ = "";
      lastMarket_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PricingDataOuterClass.internal_static_PricingData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PricingDataOuterClass.internal_static_PricingData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PricingDataOuterClass.PricingData.class, PricingDataOuterClass.PricingData.Builder.class);
    }

    /**
     * Protobuf enum {@code PricingData.QuoteType}
     */
    public enum QuoteType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>ALTSYMBOL = 5;</code>
       */
      ALTSYMBOL(5),
      /**
       * <code>HEARTBEAT = 7;</code>
       */
      HEARTBEAT(7),
      /**
       * <code>EQUITY = 8;</code>
       */
      EQUITY(8),
      /**
       * <code>INDEX = 9;</code>
       */
      INDEX(9),
      /**
       * <code>MUTUALFUND = 11;</code>
       */
      MUTUALFUND(11),
      /**
       * <code>MONEYMARKET = 12;</code>
       */
      MONEYMARKET(12),
      /**
       * <code>OPTION = 13;</code>
       */
      OPTION(13),
      /**
       * <code>CURRENCY = 14;</code>
       */
      CURRENCY(14),
      /**
       * <code>WARRANT = 15;</code>
       */
      WARRANT(15),
      /**
       * <code>BOND = 17;</code>
       */
      BOND(17),
      /**
       * <code>FUTURE = 18;</code>
       */
      FUTURE(18),
      /**
       * <code>ETF = 20;</code>
       */
      ETF(20),
      /**
       * <code>COMMODITY = 23;</code>
       */
      COMMODITY(23),
      /**
       * <code>ECNQUOTE = 28;</code>
       */
      ECNQUOTE(28),
      /**
       * <code>CRYPTOCURRENCY = 41;</code>
       */
      CRYPTOCURRENCY(41),
      /**
       * <code>INDICATOR = 42;</code>
       */
      INDICATOR(42),
      /**
       * <code>INDUSTRY = 1000;</code>
       */
      INDUSTRY(1000),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          QuoteType.class.getName());
      }
      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>ALTSYMBOL = 5;</code>
       */
      public static final int ALTSYMBOL_VALUE = 5;
      /**
       * <code>HEARTBEAT = 7;</code>
       */
      public static final int HEARTBEAT_VALUE = 7;
      /**
       * <code>EQUITY = 8;</code>
       */
      public static final int EQUITY_VALUE = 8;
      /**
       * <code>INDEX = 9;</code>
       */
      public static final int INDEX_VALUE = 9;
      /**
       * <code>MUTUALFUND = 11;</code>
       */
      public static final int MUTUALFUND_VALUE = 11;
      /**
       * <code>MONEYMARKET = 12;</code>
       */
      public static final int MONEYMARKET_VALUE = 12;
      /**
       * <code>OPTION = 13;</code>
       */
      public static final int OPTION_VALUE = 13;
      /**
       * <code>CURRENCY = 14;</code>
       */
      public static final int CURRENCY_VALUE = 14;
      /**
       * <code>WARRANT = 15;</code>
       */
      public static final int WARRANT_VALUE = 15;
      /**
       * <code>BOND = 17;</code>
       */
      public static final int BOND_VALUE = 17;
      /**
       * <code>FUTURE = 18;</code>
       */
      public static final int FUTURE_VALUE = 18;
      /**
       * <code>ETF = 20;</code>
       */
      public static final int ETF_VALUE = 20;
      /**
       * <code>COMMODITY = 23;</code>
       */
      public static final int COMMODITY_VALUE = 23;
      /**
       * <code>ECNQUOTE = 28;</code>
       */
      public static final int ECNQUOTE_VALUE = 28;
      /**
       * <code>CRYPTOCURRENCY = 41;</code>
       */
      public static final int CRYPTOCURRENCY_VALUE = 41;
      /**
       * <code>INDICATOR = 42;</code>
       */
      public static final int INDICATOR_VALUE = 42;
      /**
       * <code>INDUSTRY = 1000;</code>
       */
      public static final int INDUSTRY_VALUE = 1000;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static QuoteType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static QuoteType forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 5: return ALTSYMBOL;
          case 7: return HEARTBEAT;
          case 8: return EQUITY;
          case 9: return INDEX;
          case 11: return MUTUALFUND;
          case 12: return MONEYMARKET;
          case 13: return OPTION;
          case 14: return CURRENCY;
          case 15: return WARRANT;
          case 17: return BOND;
          case 18: return FUTURE;
          case 20: return ETF;
          case 23: return COMMODITY;
          case 28: return ECNQUOTE;
          case 41: return CRYPTOCURRENCY;
          case 42: return INDICATOR;
          case 1000: return INDUSTRY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<QuoteType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          QuoteType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<QuoteType>() {
              public QuoteType findValueByNumber(int number) {
                return QuoteType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return PricingDataOuterClass.PricingData.getDescriptor().getEnumTypes().get(0);
      }

      private static final QuoteType[] VALUES = values();

      public static QuoteType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private QuoteType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PricingData.QuoteType)
    }

    /**
     * Protobuf enum {@code PricingData.OptionType}
     */
    public enum OptionType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CALL = 0;</code>
       */
      CALL(0),
      /**
       * <code>PUT = 1;</code>
       */
      PUT(1),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          OptionType.class.getName());
      }
      /**
       * <code>CALL = 0;</code>
       */
      public static final int CALL_VALUE = 0;
      /**
       * <code>PUT = 1;</code>
       */
      public static final int PUT_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static OptionType forNumber(int value) {
        switch (value) {
          case 0: return CALL;
          case 1: return PUT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OptionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          OptionType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OptionType>() {
              public OptionType findValueByNumber(int number) {
                return OptionType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return PricingDataOuterClass.PricingData.getDescriptor().getEnumTypes().get(1);
      }

      private static final OptionType[] VALUES = values();

      public static OptionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private OptionType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PricingData.OptionType)
    }

    /**
     * Protobuf enum {@code PricingData.MarketHoursType}
     */
    public enum MarketHoursType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PRE_MARKET = 0;</code>
       */
      PRE_MARKET(0),
      /**
       * <code>REGULAR_MARKET = 1;</code>
       */
      REGULAR_MARKET(1),
      /**
       * <code>POST_MARKET = 2;</code>
       */
      POST_MARKET(2),
      /**
       * <code>EXTENDED_HOURS_MARKET = 3;</code>
       */
      EXTENDED_HOURS_MARKET(3),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          MarketHoursType.class.getName());
      }
      /**
       * <code>PRE_MARKET = 0;</code>
       */
      public static final int PRE_MARKET_VALUE = 0;
      /**
       * <code>REGULAR_MARKET = 1;</code>
       */
      public static final int REGULAR_MARKET_VALUE = 1;
      /**
       * <code>POST_MARKET = 2;</code>
       */
      public static final int POST_MARKET_VALUE = 2;
      /**
       * <code>EXTENDED_HOURS_MARKET = 3;</code>
       */
      public static final int EXTENDED_HOURS_MARKET_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MarketHoursType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MarketHoursType forNumber(int value) {
        switch (value) {
          case 0: return PRE_MARKET;
          case 1: return REGULAR_MARKET;
          case 2: return POST_MARKET;
          case 3: return EXTENDED_HOURS_MARKET;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MarketHoursType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MarketHoursType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MarketHoursType>() {
              public MarketHoursType findValueByNumber(int number) {
                return MarketHoursType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return PricingDataOuterClass.PricingData.getDescriptor().getEnumTypes().get(2);
      }

      private static final MarketHoursType[] VALUES = values();

      public static MarketHoursType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MarketHoursType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PricingData.MarketHoursType)
    }

    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRICE_FIELD_NUMBER = 2;
    private float price_ = 0F;
    /**
     * <code>float price = 2;</code>
     * @return The price.
     */
    @java.lang.Override
    public float getPrice() {
      return price_;
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private long time_ = 0L;
    /**
     * <code>sint64 time = 3;</code>
     * @return The time.
     */
    @java.lang.Override
    public long getTime() {
      return time_;
    }

    public static final int CURRENCY_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object currency_ = "";
    /**
     * <code>string currency = 4;</code>
     * @return The currency.
     */
    @java.lang.Override
    public java.lang.String getCurrency() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currency_ = s;
        return s;
      }
    }
    /**
     * <code>string currency = 4;</code>
     * @return The bytes for currency.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurrencyBytes() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXCHANGE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object exchange_ = "";
    /**
     * <code>string exchange = 5;</code>
     * @return The exchange.
     */
    @java.lang.Override
    public java.lang.String getExchange() {
      java.lang.Object ref = exchange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exchange_ = s;
        return s;
      }
    }
    /**
     * <code>string exchange = 5;</code>
     * @return The bytes for exchange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExchangeBytes() {
      java.lang.Object ref = exchange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exchange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUOTETYPE_FIELD_NUMBER = 6;
    private int quoteType_ = 0;
    /**
     * <code>.PricingData.QuoteType quoteType = 6;</code>
     * @return The enum numeric value on the wire for quoteType.
     */
    @java.lang.Override public int getQuoteTypeValue() {
      return quoteType_;
    }
    /**
     * <code>.PricingData.QuoteType quoteType = 6;</code>
     * @return The quoteType.
     */
    @java.lang.Override public PricingDataOuterClass.PricingData.QuoteType getQuoteType() {
      PricingDataOuterClass.PricingData.QuoteType result = PricingDataOuterClass.PricingData.QuoteType.forNumber(quoteType_);
      return result == null ? PricingDataOuterClass.PricingData.QuoteType.UNRECOGNIZED : result;
    }

    public static final int MARKETHOURS_FIELD_NUMBER = 7;
    private int marketHours_ = 0;
    /**
     * <code>.PricingData.MarketHoursType marketHours = 7;</code>
     * @return The enum numeric value on the wire for marketHours.
     */
    @java.lang.Override public int getMarketHoursValue() {
      return marketHours_;
    }
    /**
     * <code>.PricingData.MarketHoursType marketHours = 7;</code>
     * @return The marketHours.
     */
    @java.lang.Override public PricingDataOuterClass.PricingData.MarketHoursType getMarketHours() {
      PricingDataOuterClass.PricingData.MarketHoursType result = PricingDataOuterClass.PricingData.MarketHoursType.forNumber(marketHours_);
      return result == null ? PricingDataOuterClass.PricingData.MarketHoursType.UNRECOGNIZED : result;
    }

    public static final int CHANGEPERCENT_FIELD_NUMBER = 8;
    private float changePercent_ = 0F;
    /**
     * <code>float changePercent = 8;</code>
     * @return The changePercent.
     */
    @java.lang.Override
    public float getChangePercent() {
      return changePercent_;
    }

    public static final int DAYVOLUME_FIELD_NUMBER = 9;
    private long dayVolume_ = 0L;
    /**
     * <code>sint64 dayVolume = 9;</code>
     * @return The dayVolume.
     */
    @java.lang.Override
    public long getDayVolume() {
      return dayVolume_;
    }

    public static final int DAYHIGH_FIELD_NUMBER = 10;
    private float dayHigh_ = 0F;
    /**
     * <code>float dayHigh = 10;</code>
     * @return The dayHigh.
     */
    @java.lang.Override
    public float getDayHigh() {
      return dayHigh_;
    }

    public static final int DAYLOW_FIELD_NUMBER = 11;
    private float dayLow_ = 0F;
    /**
     * <code>float dayLow = 11;</code>
     * @return The dayLow.
     */
    @java.lang.Override
    public float getDayLow() {
      return dayLow_;
    }

    public static final int CHANGE_FIELD_NUMBER = 12;
    private float change_ = 0F;
    /**
     * <code>float change = 12;</code>
     * @return The change.
     */
    @java.lang.Override
    public float getChange() {
      return change_;
    }

    public static final int SHORTNAME_FIELD_NUMBER = 13;
    @SuppressWarnings("serial")
    private volatile java.lang.Object shortName_ = "";
    /**
     * <code>string shortName = 13;</code>
     * @return The shortName.
     */
    @java.lang.Override
    public java.lang.String getShortName() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shortName_ = s;
        return s;
      }
    }
    /**
     * <code>string shortName = 13;</code>
     * @return The bytes for shortName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getShortNameBytes() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shortName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIREDATE_FIELD_NUMBER = 14;
    private long expireDate_ = 0L;
    /**
     * <code>sint64 expireDate = 14;</code>
     * @return The expireDate.
     */
    @java.lang.Override
    public long getExpireDate() {
      return expireDate_;
    }

    public static final int OPENPRICE_FIELD_NUMBER = 15;
    private float openPrice_ = 0F;
    /**
     * <code>float openPrice = 15;</code>
     * @return The openPrice.
     */
    @java.lang.Override
    public float getOpenPrice() {
      return openPrice_;
    }

    public static final int PREVIOUSCLOSE_FIELD_NUMBER = 16;
    private float previousClose_ = 0F;
    /**
     * <code>float previousClose = 16;</code>
     * @return The previousClose.
     */
    @java.lang.Override
    public float getPreviousClose() {
      return previousClose_;
    }

    public static final int STRIKEPRICE_FIELD_NUMBER = 17;
    private float strikePrice_ = 0F;
    /**
     * <code>float strikePrice = 17;</code>
     * @return The strikePrice.
     */
    @java.lang.Override
    public float getStrikePrice() {
      return strikePrice_;
    }

    public static final int UNDERLYINGSYMBOL_FIELD_NUMBER = 18;
    @SuppressWarnings("serial")
    private volatile java.lang.Object underlyingSymbol_ = "";
    /**
     * <code>string underlyingSymbol = 18;</code>
     * @return The underlyingSymbol.
     */
    @java.lang.Override
    public java.lang.String getUnderlyingSymbol() {
      java.lang.Object ref = underlyingSymbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        underlyingSymbol_ = s;
        return s;
      }
    }
    /**
     * <code>string underlyingSymbol = 18;</code>
     * @return The bytes for underlyingSymbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUnderlyingSymbolBytes() {
      java.lang.Object ref = underlyingSymbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        underlyingSymbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPENINTEREST_FIELD_NUMBER = 19;
    private long openInterest_ = 0L;
    /**
     * <code>sint64 openInterest = 19;</code>
     * @return The openInterest.
     */
    @java.lang.Override
    public long getOpenInterest() {
      return openInterest_;
    }

    public static final int OPTIONSTYPE_FIELD_NUMBER = 20;
    private int optionsType_ = 0;
    /**
     * <code>.PricingData.OptionType optionsType = 20;</code>
     * @return The enum numeric value on the wire for optionsType.
     */
    @java.lang.Override public int getOptionsTypeValue() {
      return optionsType_;
    }
    /**
     * <code>.PricingData.OptionType optionsType = 20;</code>
     * @return The optionsType.
     */
    @java.lang.Override public PricingDataOuterClass.PricingData.OptionType getOptionsType() {
      PricingDataOuterClass.PricingData.OptionType result = PricingDataOuterClass.PricingData.OptionType.forNumber(optionsType_);
      return result == null ? PricingDataOuterClass.PricingData.OptionType.UNRECOGNIZED : result;
    }

    public static final int MINIOPTION_FIELD_NUMBER = 21;
    private long miniOption_ = 0L;
    /**
     * <code>sint64 miniOption = 21;</code>
     * @return The miniOption.
     */
    @java.lang.Override
    public long getMiniOption() {
      return miniOption_;
    }

    public static final int LASTSIZE_FIELD_NUMBER = 22;
    private long lastSize_ = 0L;
    /**
     * <code>sint64 lastSize = 22;</code>
     * @return The lastSize.
     */
    @java.lang.Override
    public long getLastSize() {
      return lastSize_;
    }

    public static final int BID_FIELD_NUMBER = 23;
    private float bid_ = 0F;
    /**
     * <code>float bid = 23;</code>
     * @return The bid.
     */
    @java.lang.Override
    public float getBid() {
      return bid_;
    }

    public static final int BIDSIZE_FIELD_NUMBER = 24;
    private long bidSize_ = 0L;
    /**
     * <code>sint64 bidSize = 24;</code>
     * @return The bidSize.
     */
    @java.lang.Override
    public long getBidSize() {
      return bidSize_;
    }

    public static final int ASK_FIELD_NUMBER = 25;
    private float ask_ = 0F;
    /**
     * <code>float ask = 25;</code>
     * @return The ask.
     */
    @java.lang.Override
    public float getAsk() {
      return ask_;
    }

    public static final int ASKSIZE_FIELD_NUMBER = 26;
    private long askSize_ = 0L;
    /**
     * <code>sint64 askSize = 26;</code>
     * @return The askSize.
     */
    @java.lang.Override
    public long getAskSize() {
      return askSize_;
    }

    public static final int PRICEHINT_FIELD_NUMBER = 27;
    private long priceHint_ = 0L;
    /**
     * <code>sint64 priceHint = 27;</code>
     * @return The priceHint.
     */
    @java.lang.Override
    public long getPriceHint() {
      return priceHint_;
    }

    public static final int VOL_24HR_FIELD_NUMBER = 28;
    private long vol24Hr_ = 0L;
    /**
     * <code>sint64 vol_24hr = 28;</code>
     * @return The vol24hr.
     */
    @java.lang.Override
    public long getVol24Hr() {
      return vol24Hr_;
    }

    public static final int VOLALLCURRENCIES_FIELD_NUMBER = 29;
    private long volAllCurrencies_ = 0L;
    /**
     * <code>sint64 volAllCurrencies = 29;</code>
     * @return The volAllCurrencies.
     */
    @java.lang.Override
    public long getVolAllCurrencies() {
      return volAllCurrencies_;
    }

    public static final int FROMCURRENCY_FIELD_NUMBER = 30;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fromcurrency_ = "";
    /**
     * <code>string fromcurrency = 30;</code>
     * @return The fromcurrency.
     */
    @java.lang.Override
    public java.lang.String getFromcurrency() {
      java.lang.Object ref = fromcurrency_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fromcurrency_ = s;
        return s;
      }
    }
    /**
     * <code>string fromcurrency = 30;</code>
     * @return The bytes for fromcurrency.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFromcurrencyBytes() {
      java.lang.Object ref = fromcurrency_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fromcurrency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTMARKET_FIELD_NUMBER = 31;
    @SuppressWarnings("serial")
    private volatile java.lang.Object lastMarket_ = "";
    /**
     * <code>string lastMarket = 31;</code>
     * @return The lastMarket.
     */
    @java.lang.Override
    public java.lang.String getLastMarket() {
      java.lang.Object ref = lastMarket_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastMarket_ = s;
        return s;
      }
    }
    /**
     * <code>string lastMarket = 31;</code>
     * @return The bytes for lastMarket.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastMarketBytes() {
      java.lang.Object ref = lastMarket_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastMarket_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CIRCULATINGSUPPLY_FIELD_NUMBER = 32;
    private double circulatingSupply_ = 0D;
    /**
     * <code>double circulatingSupply = 32;</code>
     * @return The circulatingSupply.
     */
    @java.lang.Override
    public double getCirculatingSupply() {
      return circulatingSupply_;
    }

    public static final int MARKETCAP_FIELD_NUMBER = 33;
    private double marketcap_ = 0D;
    /**
     * <code>double marketcap = 33;</code>
     * @return The marketcap.
     */
    @java.lang.Override
    public double getMarketcap() {
      return marketcap_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (java.lang.Float.floatToRawIntBits(price_) != 0) {
        output.writeFloat(2, price_);
      }
      if (time_ != 0L) {
        output.writeSInt64(3, time_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(currency_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, currency_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(exchange_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, exchange_);
      }
      if (quoteType_ != PricingDataOuterClass.PricingData.QuoteType.NONE.getNumber()) {
        output.writeEnum(6, quoteType_);
      }
      if (marketHours_ != PricingDataOuterClass.PricingData.MarketHoursType.PRE_MARKET.getNumber()) {
        output.writeEnum(7, marketHours_);
      }
      if (java.lang.Float.floatToRawIntBits(changePercent_) != 0) {
        output.writeFloat(8, changePercent_);
      }
      if (dayVolume_ != 0L) {
        output.writeSInt64(9, dayVolume_);
      }
      if (java.lang.Float.floatToRawIntBits(dayHigh_) != 0) {
        output.writeFloat(10, dayHigh_);
      }
      if (java.lang.Float.floatToRawIntBits(dayLow_) != 0) {
        output.writeFloat(11, dayLow_);
      }
      if (java.lang.Float.floatToRawIntBits(change_) != 0) {
        output.writeFloat(12, change_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(shortName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 13, shortName_);
      }
      if (expireDate_ != 0L) {
        output.writeSInt64(14, expireDate_);
      }
      if (java.lang.Float.floatToRawIntBits(openPrice_) != 0) {
        output.writeFloat(15, openPrice_);
      }
      if (java.lang.Float.floatToRawIntBits(previousClose_) != 0) {
        output.writeFloat(16, previousClose_);
      }
      if (java.lang.Float.floatToRawIntBits(strikePrice_) != 0) {
        output.writeFloat(17, strikePrice_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(underlyingSymbol_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 18, underlyingSymbol_);
      }
      if (openInterest_ != 0L) {
        output.writeSInt64(19, openInterest_);
      }
      if (optionsType_ != PricingDataOuterClass.PricingData.OptionType.CALL.getNumber()) {
        output.writeEnum(20, optionsType_);
      }
      if (miniOption_ != 0L) {
        output.writeSInt64(21, miniOption_);
      }
      if (lastSize_ != 0L) {
        output.writeSInt64(22, lastSize_);
      }
      if (java.lang.Float.floatToRawIntBits(bid_) != 0) {
        output.writeFloat(23, bid_);
      }
      if (bidSize_ != 0L) {
        output.writeSInt64(24, bidSize_);
      }
      if (java.lang.Float.floatToRawIntBits(ask_) != 0) {
        output.writeFloat(25, ask_);
      }
      if (askSize_ != 0L) {
        output.writeSInt64(26, askSize_);
      }
      if (priceHint_ != 0L) {
        output.writeSInt64(27, priceHint_);
      }
      if (vol24Hr_ != 0L) {
        output.writeSInt64(28, vol24Hr_);
      }
      if (volAllCurrencies_ != 0L) {
        output.writeSInt64(29, volAllCurrencies_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fromcurrency_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 30, fromcurrency_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastMarket_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 31, lastMarket_);
      }
      if (java.lang.Double.doubleToRawLongBits(circulatingSupply_) != 0) {
        output.writeDouble(32, circulatingSupply_);
      }
      if (java.lang.Double.doubleToRawLongBits(marketcap_) != 0) {
        output.writeDouble(33, marketcap_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (java.lang.Float.floatToRawIntBits(price_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, price_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, time_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(currency_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, currency_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(exchange_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, exchange_);
      }
      if (quoteType_ != PricingDataOuterClass.PricingData.QuoteType.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, quoteType_);
      }
      if (marketHours_ != PricingDataOuterClass.PricingData.MarketHoursType.PRE_MARKET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, marketHours_);
      }
      if (java.lang.Float.floatToRawIntBits(changePercent_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, changePercent_);
      }
      if (dayVolume_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(9, dayVolume_);
      }
      if (java.lang.Float.floatToRawIntBits(dayHigh_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, dayHigh_);
      }
      if (java.lang.Float.floatToRawIntBits(dayLow_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, dayLow_);
      }
      if (java.lang.Float.floatToRawIntBits(change_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, change_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(shortName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(13, shortName_);
      }
      if (expireDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(14, expireDate_);
      }
      if (java.lang.Float.floatToRawIntBits(openPrice_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, openPrice_);
      }
      if (java.lang.Float.floatToRawIntBits(previousClose_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, previousClose_);
      }
      if (java.lang.Float.floatToRawIntBits(strikePrice_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, strikePrice_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(underlyingSymbol_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(18, underlyingSymbol_);
      }
      if (openInterest_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(19, openInterest_);
      }
      if (optionsType_ != PricingDataOuterClass.PricingData.OptionType.CALL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(20, optionsType_);
      }
      if (miniOption_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(21, miniOption_);
      }
      if (lastSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(22, lastSize_);
      }
      if (java.lang.Float.floatToRawIntBits(bid_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, bid_);
      }
      if (bidSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(24, bidSize_);
      }
      if (java.lang.Float.floatToRawIntBits(ask_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, ask_);
      }
      if (askSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(26, askSize_);
      }
      if (priceHint_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(27, priceHint_);
      }
      if (vol24Hr_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(28, vol24Hr_);
      }
      if (volAllCurrencies_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(29, volAllCurrencies_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fromcurrency_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(30, fromcurrency_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastMarket_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(31, lastMarket_);
      }
      if (java.lang.Double.doubleToRawLongBits(circulatingSupply_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(32, circulatingSupply_);
      }
      if (java.lang.Double.doubleToRawLongBits(marketcap_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(33, marketcap_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PricingDataOuterClass.PricingData)) {
        return super.equals(obj);
      }
      PricingDataOuterClass.PricingData other = (PricingDataOuterClass.PricingData) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (java.lang.Float.floatToIntBits(getPrice())
          != java.lang.Float.floatToIntBits(
              other.getPrice())) return false;
      if (getTime()
          != other.getTime()) return false;
      if (!getCurrency()
          .equals(other.getCurrency())) return false;
      if (!getExchange()
          .equals(other.getExchange())) return false;
      if (quoteType_ != other.quoteType_) return false;
      if (marketHours_ != other.marketHours_) return false;
      if (java.lang.Float.floatToIntBits(getChangePercent())
          != java.lang.Float.floatToIntBits(
              other.getChangePercent())) return false;
      if (getDayVolume()
          != other.getDayVolume()) return false;
      if (java.lang.Float.floatToIntBits(getDayHigh())
          != java.lang.Float.floatToIntBits(
              other.getDayHigh())) return false;
      if (java.lang.Float.floatToIntBits(getDayLow())
          != java.lang.Float.floatToIntBits(
              other.getDayLow())) return false;
      if (java.lang.Float.floatToIntBits(getChange())
          != java.lang.Float.floatToIntBits(
              other.getChange())) return false;
      if (!getShortName()
          .equals(other.getShortName())) return false;
      if (getExpireDate()
          != other.getExpireDate()) return false;
      if (java.lang.Float.floatToIntBits(getOpenPrice())
          != java.lang.Float.floatToIntBits(
              other.getOpenPrice())) return false;
      if (java.lang.Float.floatToIntBits(getPreviousClose())
          != java.lang.Float.floatToIntBits(
              other.getPreviousClose())) return false;
      if (java.lang.Float.floatToIntBits(getStrikePrice())
          != java.lang.Float.floatToIntBits(
              other.getStrikePrice())) return false;
      if (!getUnderlyingSymbol()
          .equals(other.getUnderlyingSymbol())) return false;
      if (getOpenInterest()
          != other.getOpenInterest()) return false;
      if (optionsType_ != other.optionsType_) return false;
      if (getMiniOption()
          != other.getMiniOption()) return false;
      if (getLastSize()
          != other.getLastSize()) return false;
      if (java.lang.Float.floatToIntBits(getBid())
          != java.lang.Float.floatToIntBits(
              other.getBid())) return false;
      if (getBidSize()
          != other.getBidSize()) return false;
      if (java.lang.Float.floatToIntBits(getAsk())
          != java.lang.Float.floatToIntBits(
              other.getAsk())) return false;
      if (getAskSize()
          != other.getAskSize()) return false;
      if (getPriceHint()
          != other.getPriceHint()) return false;
      if (getVol24Hr()
          != other.getVol24Hr()) return false;
      if (getVolAllCurrencies()
          != other.getVolAllCurrencies()) return false;
      if (!getFromcurrency()
          .equals(other.getFromcurrency())) return false;
      if (!getLastMarket()
          .equals(other.getLastMarket())) return false;
      if (java.lang.Double.doubleToLongBits(getCirculatingSupply())
          != java.lang.Double.doubleToLongBits(
              other.getCirculatingSupply())) return false;
      if (java.lang.Double.doubleToLongBits(getMarketcap())
          != java.lang.Double.doubleToLongBits(
              other.getMarketcap())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPrice());
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
      hash = (53 * hash) + getCurrency().hashCode();
      hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getExchange().hashCode();
      hash = (37 * hash) + QUOTETYPE_FIELD_NUMBER;
      hash = (53 * hash) + quoteType_;
      hash = (37 * hash) + MARKETHOURS_FIELD_NUMBER;
      hash = (53 * hash) + marketHours_;
      hash = (37 * hash) + CHANGEPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getChangePercent());
      hash = (37 * hash) + DAYVOLUME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDayVolume());
      hash = (37 * hash) + DAYHIGH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDayHigh());
      hash = (37 * hash) + DAYLOW_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDayLow());
      hash = (37 * hash) + CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getChange());
      hash = (37 * hash) + SHORTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getShortName().hashCode();
      hash = (37 * hash) + EXPIREDATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExpireDate());
      hash = (37 * hash) + OPENPRICE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOpenPrice());
      hash = (37 * hash) + PREVIOUSCLOSE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPreviousClose());
      hash = (37 * hash) + STRIKEPRICE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getStrikePrice());
      hash = (37 * hash) + UNDERLYINGSYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getUnderlyingSymbol().hashCode();
      hash = (37 * hash) + OPENINTEREST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOpenInterest());
      hash = (37 * hash) + OPTIONSTYPE_FIELD_NUMBER;
      hash = (53 * hash) + optionsType_;
      hash = (37 * hash) + MINIOPTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMiniOption());
      hash = (37 * hash) + LASTSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastSize());
      hash = (37 * hash) + BID_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBid());
      hash = (37 * hash) + BIDSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBidSize());
      hash = (37 * hash) + ASK_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAsk());
      hash = (37 * hash) + ASKSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAskSize());
      hash = (37 * hash) + PRICEHINT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPriceHint());
      hash = (37 * hash) + VOL_24HR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVol24Hr());
      hash = (37 * hash) + VOLALLCURRENCIES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVolAllCurrencies());
      hash = (37 * hash) + FROMCURRENCY_FIELD_NUMBER;
      hash = (53 * hash) + getFromcurrency().hashCode();
      hash = (37 * hash) + LASTMARKET_FIELD_NUMBER;
      hash = (53 * hash) + getLastMarket().hashCode();
      hash = (37 * hash) + CIRCULATINGSUPPLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCirculatingSupply()));
      hash = (37 * hash) + MARKETCAP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMarketcap()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PricingDataOuterClass.PricingData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PricingDataOuterClass.PricingData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PricingDataOuterClass.PricingData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PricingDataOuterClass.PricingData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PricingDataOuterClass.PricingData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PricingDataOuterClass.PricingData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PricingDataOuterClass.PricingData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static PricingDataOuterClass.PricingData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static PricingDataOuterClass.PricingData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static PricingDataOuterClass.PricingData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PricingDataOuterClass.PricingData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static PricingDataOuterClass.PricingData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PricingDataOuterClass.PricingData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PricingData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PricingData)
        PricingDataOuterClass.PricingDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PricingDataOuterClass.internal_static_PricingData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PricingDataOuterClass.internal_static_PricingData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PricingDataOuterClass.PricingData.class, PricingDataOuterClass.PricingData.Builder.class);
      }

      // Construct using PricingDataOuterClass.PricingData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        id_ = "";
        price_ = 0F;
        time_ = 0L;
        currency_ = "";
        exchange_ = "";
        quoteType_ = 0;
        marketHours_ = 0;
        changePercent_ = 0F;
        dayVolume_ = 0L;
        dayHigh_ = 0F;
        dayLow_ = 0F;
        change_ = 0F;
        shortName_ = "";
        expireDate_ = 0L;
        openPrice_ = 0F;
        previousClose_ = 0F;
        strikePrice_ = 0F;
        underlyingSymbol_ = "";
        openInterest_ = 0L;
        optionsType_ = 0;
        miniOption_ = 0L;
        lastSize_ = 0L;
        bid_ = 0F;
        bidSize_ = 0L;
        ask_ = 0F;
        askSize_ = 0L;
        priceHint_ = 0L;
        vol24Hr_ = 0L;
        volAllCurrencies_ = 0L;
        fromcurrency_ = "";
        lastMarket_ = "";
        circulatingSupply_ = 0D;
        marketcap_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PricingDataOuterClass.internal_static_PricingData_descriptor;
      }

      @java.lang.Override
      public PricingDataOuterClass.PricingData getDefaultInstanceForType() {
        return PricingDataOuterClass.PricingData.getDefaultInstance();
      }

      @java.lang.Override
      public PricingDataOuterClass.PricingData build() {
        PricingDataOuterClass.PricingData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public PricingDataOuterClass.PricingData buildPartial() {
        PricingDataOuterClass.PricingData result = new PricingDataOuterClass.PricingData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(PricingDataOuterClass.PricingData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.price_ = price_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.time_ = time_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.currency_ = currency_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.exchange_ = exchange_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.quoteType_ = quoteType_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.marketHours_ = marketHours_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.changePercent_ = changePercent_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.dayVolume_ = dayVolume_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.dayHigh_ = dayHigh_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.dayLow_ = dayLow_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.change_ = change_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.shortName_ = shortName_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.expireDate_ = expireDate_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.openPrice_ = openPrice_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.previousClose_ = previousClose_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.strikePrice_ = strikePrice_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.underlyingSymbol_ = underlyingSymbol_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.openInterest_ = openInterest_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.optionsType_ = optionsType_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.miniOption_ = miniOption_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.lastSize_ = lastSize_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.bid_ = bid_;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.bidSize_ = bidSize_;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.ask_ = ask_;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.askSize_ = askSize_;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.priceHint_ = priceHint_;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.vol24Hr_ = vol24Hr_;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.volAllCurrencies_ = volAllCurrencies_;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.fromcurrency_ = fromcurrency_;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.lastMarket_ = lastMarket_;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.circulatingSupply_ = circulatingSupply_;
        }
      }

      private void buildPartial1(PricingDataOuterClass.PricingData result) {
        int from_bitField1_ = bitField1_;
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.marketcap_ = marketcap_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PricingDataOuterClass.PricingData) {
          return mergeFrom((PricingDataOuterClass.PricingData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PricingDataOuterClass.PricingData other) {
        if (other == PricingDataOuterClass.PricingData.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getPrice() != 0F) {
          setPrice(other.getPrice());
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (!other.getCurrency().isEmpty()) {
          currency_ = other.currency_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getExchange().isEmpty()) {
          exchange_ = other.exchange_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.quoteType_ != 0) {
          setQuoteTypeValue(other.getQuoteTypeValue());
        }
        if (other.marketHours_ != 0) {
          setMarketHoursValue(other.getMarketHoursValue());
        }
        if (other.getChangePercent() != 0F) {
          setChangePercent(other.getChangePercent());
        }
        if (other.getDayVolume() != 0L) {
          setDayVolume(other.getDayVolume());
        }
        if (other.getDayHigh() != 0F) {
          setDayHigh(other.getDayHigh());
        }
        if (other.getDayLow() != 0F) {
          setDayLow(other.getDayLow());
        }
        if (other.getChange() != 0F) {
          setChange(other.getChange());
        }
        if (!other.getShortName().isEmpty()) {
          shortName_ = other.shortName_;
          bitField0_ |= 0x00001000;
          onChanged();
        }
        if (other.getExpireDate() != 0L) {
          setExpireDate(other.getExpireDate());
        }
        if (other.getOpenPrice() != 0F) {
          setOpenPrice(other.getOpenPrice());
        }
        if (other.getPreviousClose() != 0F) {
          setPreviousClose(other.getPreviousClose());
        }
        if (other.getStrikePrice() != 0F) {
          setStrikePrice(other.getStrikePrice());
        }
        if (!other.getUnderlyingSymbol().isEmpty()) {
          underlyingSymbol_ = other.underlyingSymbol_;
          bitField0_ |= 0x00020000;
          onChanged();
        }
        if (other.getOpenInterest() != 0L) {
          setOpenInterest(other.getOpenInterest());
        }
        if (other.optionsType_ != 0) {
          setOptionsTypeValue(other.getOptionsTypeValue());
        }
        if (other.getMiniOption() != 0L) {
          setMiniOption(other.getMiniOption());
        }
        if (other.getLastSize() != 0L) {
          setLastSize(other.getLastSize());
        }
        if (other.getBid() != 0F) {
          setBid(other.getBid());
        }
        if (other.getBidSize() != 0L) {
          setBidSize(other.getBidSize());
        }
        if (other.getAsk() != 0F) {
          setAsk(other.getAsk());
        }
        if (other.getAskSize() != 0L) {
          setAskSize(other.getAskSize());
        }
        if (other.getPriceHint() != 0L) {
          setPriceHint(other.getPriceHint());
        }
        if (other.getVol24Hr() != 0L) {
          setVol24Hr(other.getVol24Hr());
        }
        if (other.getVolAllCurrencies() != 0L) {
          setVolAllCurrencies(other.getVolAllCurrencies());
        }
        if (!other.getFromcurrency().isEmpty()) {
          fromcurrency_ = other.fromcurrency_;
          bitField0_ |= 0x20000000;
          onChanged();
        }
        if (!other.getLastMarket().isEmpty()) {
          lastMarket_ = other.lastMarket_;
          bitField0_ |= 0x40000000;
          onChanged();
        }
        if (other.getCirculatingSupply() != 0D) {
          setCirculatingSupply(other.getCirculatingSupply());
        }
        if (other.getMarketcap() != 0D) {
          setMarketcap(other.getMarketcap());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 21: {
                price_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 24: {
                time_ = input.readSInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                currency_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                exchange_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                quoteType_ = input.readEnum();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                marketHours_ = input.readEnum();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 69: {
                changePercent_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              case 72: {
                dayVolume_ = input.readSInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 85: {
                dayHigh_ = input.readFloat();
                bitField0_ |= 0x00000200;
                break;
              } // case 85
              case 93: {
                dayLow_ = input.readFloat();
                bitField0_ |= 0x00000400;
                break;
              } // case 93
              case 101: {
                change_ = input.readFloat();
                bitField0_ |= 0x00000800;
                break;
              } // case 101
              case 106: {
                shortName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              case 112: {
                expireDate_ = input.readSInt64();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 125: {
                openPrice_ = input.readFloat();
                bitField0_ |= 0x00004000;
                break;
              } // case 125
              case 133: {
                previousClose_ = input.readFloat();
                bitField0_ |= 0x00008000;
                break;
              } // case 133
              case 141: {
                strikePrice_ = input.readFloat();
                bitField0_ |= 0x00010000;
                break;
              } // case 141
              case 146: {
                underlyingSymbol_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00020000;
                break;
              } // case 146
              case 152: {
                openInterest_ = input.readSInt64();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                optionsType_ = input.readEnum();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                miniOption_ = input.readSInt64();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                lastSize_ = input.readSInt64();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              case 189: {
                bid_ = input.readFloat();
                bitField0_ |= 0x00400000;
                break;
              } // case 189
              case 192: {
                bidSize_ = input.readSInt64();
                bitField0_ |= 0x00800000;
                break;
              } // case 192
              case 205: {
                ask_ = input.readFloat();
                bitField0_ |= 0x01000000;
                break;
              } // case 205
              case 208: {
                askSize_ = input.readSInt64();
                bitField0_ |= 0x02000000;
                break;
              } // case 208
              case 216: {
                priceHint_ = input.readSInt64();
                bitField0_ |= 0x04000000;
                break;
              } // case 216
              case 224: {
                vol24Hr_ = input.readSInt64();
                bitField0_ |= 0x08000000;
                break;
              } // case 224
              case 232: {
                volAllCurrencies_ = input.readSInt64();
                bitField0_ |= 0x10000000;
                break;
              } // case 232
              case 242: {
                fromcurrency_ = input.readStringRequireUtf8();
                bitField0_ |= 0x20000000;
                break;
              } // case 242
              case 250: {
                lastMarket_ = input.readStringRequireUtf8();
                bitField0_ |= 0x40000000;
                break;
              } // case 250
              case 257: {
                circulatingSupply_ = input.readDouble();
                bitField0_ |= 0x80000000;
                break;
              } // case 257
              case 265: {
                marketcap_ = input.readDouble();
                bitField1_ |= 0x00000001;
                break;
              } // case 265
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private float price_ ;
      /**
       * <code>float price = 2;</code>
       * @return The price.
       */
      @java.lang.Override
      public float getPrice() {
        return price_;
      }
      /**
       * <code>float price = 2;</code>
       * @param value The price to set.
       * @return This builder for chaining.
       */
      public Builder setPrice(float value) {

        price_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float price = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        price_ = 0F;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>sint64 time = 3;</code>
       * @return The time.
       */
      @java.lang.Override
      public long getTime() {
        return time_;
      }
      /**
       * <code>sint64 time = 3;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(long value) {

        time_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 time = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object currency_ = "";
      /**
       * <code>string currency = 4;</code>
       * @return The currency.
       */
      public java.lang.String getCurrency() {
        java.lang.Object ref = currency_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          currency_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string currency = 4;</code>
       * @return The bytes for currency.
       */
      public com.google.protobuf.ByteString
          getCurrencyBytes() {
        java.lang.Object ref = currency_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          currency_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string currency = 4;</code>
       * @param value The currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrency(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        currency_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>string currency = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrency() {
        currency_ = getDefaultInstance().getCurrency();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>string currency = 4;</code>
       * @param value The bytes for currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrencyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        currency_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object exchange_ = "";
      /**
       * <code>string exchange = 5;</code>
       * @return The exchange.
       */
      public java.lang.String getExchange() {
        java.lang.Object ref = exchange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          exchange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string exchange = 5;</code>
       * @return The bytes for exchange.
       */
      public com.google.protobuf.ByteString
          getExchangeBytes() {
        java.lang.Object ref = exchange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          exchange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string exchange = 5;</code>
       * @param value The exchange to set.
       * @return This builder for chaining.
       */
      public Builder setExchange(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        exchange_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>string exchange = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearExchange() {
        exchange_ = getDefaultInstance().getExchange();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>string exchange = 5;</code>
       * @param value The bytes for exchange to set.
       * @return This builder for chaining.
       */
      public Builder setExchangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        exchange_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private int quoteType_ = 0;
      /**
       * <code>.PricingData.QuoteType quoteType = 6;</code>
       * @return The enum numeric value on the wire for quoteType.
       */
      @java.lang.Override public int getQuoteTypeValue() {
        return quoteType_;
      }
      /**
       * <code>.PricingData.QuoteType quoteType = 6;</code>
       * @param value The enum numeric value on the wire for quoteType to set.
       * @return This builder for chaining.
       */
      public Builder setQuoteTypeValue(int value) {
        quoteType_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.PricingData.QuoteType quoteType = 6;</code>
       * @return The quoteType.
       */
      @java.lang.Override
      public PricingDataOuterClass.PricingData.QuoteType getQuoteType() {
        PricingDataOuterClass.PricingData.QuoteType result = PricingDataOuterClass.PricingData.QuoteType.forNumber(quoteType_);
        return result == null ? PricingDataOuterClass.PricingData.QuoteType.UNRECOGNIZED : result;
      }
      /**
       * <code>.PricingData.QuoteType quoteType = 6;</code>
       * @param value The quoteType to set.
       * @return This builder for chaining.
       */
      public Builder setQuoteType(PricingDataOuterClass.PricingData.QuoteType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        quoteType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.PricingData.QuoteType quoteType = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuoteType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        quoteType_ = 0;
        onChanged();
        return this;
      }

      private int marketHours_ = 0;
      /**
       * <code>.PricingData.MarketHoursType marketHours = 7;</code>
       * @return The enum numeric value on the wire for marketHours.
       */
      @java.lang.Override public int getMarketHoursValue() {
        return marketHours_;
      }
      /**
       * <code>.PricingData.MarketHoursType marketHours = 7;</code>
       * @param value The enum numeric value on the wire for marketHours to set.
       * @return This builder for chaining.
       */
      public Builder setMarketHoursValue(int value) {
        marketHours_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>.PricingData.MarketHoursType marketHours = 7;</code>
       * @return The marketHours.
       */
      @java.lang.Override
      public PricingDataOuterClass.PricingData.MarketHoursType getMarketHours() {
        PricingDataOuterClass.PricingData.MarketHoursType result = PricingDataOuterClass.PricingData.MarketHoursType.forNumber(marketHours_);
        return result == null ? PricingDataOuterClass.PricingData.MarketHoursType.UNRECOGNIZED : result;
      }
      /**
       * <code>.PricingData.MarketHoursType marketHours = 7;</code>
       * @param value The marketHours to set.
       * @return This builder for chaining.
       */
      public Builder setMarketHours(PricingDataOuterClass.PricingData.MarketHoursType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        marketHours_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.PricingData.MarketHoursType marketHours = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarketHours() {
        bitField0_ = (bitField0_ & ~0x00000040);
        marketHours_ = 0;
        onChanged();
        return this;
      }

      private float changePercent_ ;
      /**
       * <code>float changePercent = 8;</code>
       * @return The changePercent.
       */
      @java.lang.Override
      public float getChangePercent() {
        return changePercent_;
      }
      /**
       * <code>float changePercent = 8;</code>
       * @param value The changePercent to set.
       * @return This builder for chaining.
       */
      public Builder setChangePercent(float value) {

        changePercent_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>float changePercent = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangePercent() {
        bitField0_ = (bitField0_ & ~0x00000080);
        changePercent_ = 0F;
        onChanged();
        return this;
      }

      private long dayVolume_ ;
      /**
       * <code>sint64 dayVolume = 9;</code>
       * @return The dayVolume.
       */
      @java.lang.Override
      public long getDayVolume() {
        return dayVolume_;
      }
      /**
       * <code>sint64 dayVolume = 9;</code>
       * @param value The dayVolume to set.
       * @return This builder for chaining.
       */
      public Builder setDayVolume(long value) {

        dayVolume_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 dayVolume = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDayVolume() {
        bitField0_ = (bitField0_ & ~0x00000100);
        dayVolume_ = 0L;
        onChanged();
        return this;
      }

      private float dayHigh_ ;
      /**
       * <code>float dayHigh = 10;</code>
       * @return The dayHigh.
       */
      @java.lang.Override
      public float getDayHigh() {
        return dayHigh_;
      }
      /**
       * <code>float dayHigh = 10;</code>
       * @param value The dayHigh to set.
       * @return This builder for chaining.
       */
      public Builder setDayHigh(float value) {

        dayHigh_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>float dayHigh = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDayHigh() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dayHigh_ = 0F;
        onChanged();
        return this;
      }

      private float dayLow_ ;
      /**
       * <code>float dayLow = 11;</code>
       * @return The dayLow.
       */
      @java.lang.Override
      public float getDayLow() {
        return dayLow_;
      }
      /**
       * <code>float dayLow = 11;</code>
       * @param value The dayLow to set.
       * @return This builder for chaining.
       */
      public Builder setDayLow(float value) {

        dayLow_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>float dayLow = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDayLow() {
        bitField0_ = (bitField0_ & ~0x00000400);
        dayLow_ = 0F;
        onChanged();
        return this;
      }

      private float change_ ;
      /**
       * <code>float change = 12;</code>
       * @return The change.
       */
      @java.lang.Override
      public float getChange() {
        return change_;
      }
      /**
       * <code>float change = 12;</code>
       * @param value The change to set.
       * @return This builder for chaining.
       */
      public Builder setChange(float value) {

        change_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>float change = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearChange() {
        bitField0_ = (bitField0_ & ~0x00000800);
        change_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object shortName_ = "";
      /**
       * <code>string shortName = 13;</code>
       * @return The shortName.
       */
      public java.lang.String getShortName() {
        java.lang.Object ref = shortName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          shortName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string shortName = 13;</code>
       * @return The bytes for shortName.
       */
      public com.google.protobuf.ByteString
          getShortNameBytes() {
        java.lang.Object ref = shortName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shortName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string shortName = 13;</code>
       * @param value The shortName to set.
       * @return This builder for chaining.
       */
      public Builder setShortName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        shortName_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>string shortName = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearShortName() {
        shortName_ = getDefaultInstance().getShortName();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      /**
       * <code>string shortName = 13;</code>
       * @param value The bytes for shortName to set.
       * @return This builder for chaining.
       */
      public Builder setShortNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        shortName_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }

      private long expireDate_ ;
      /**
       * <code>sint64 expireDate = 14;</code>
       * @return The expireDate.
       */
      @java.lang.Override
      public long getExpireDate() {
        return expireDate_;
      }
      /**
       * <code>sint64 expireDate = 14;</code>
       * @param value The expireDate to set.
       * @return This builder for chaining.
       */
      public Builder setExpireDate(long value) {

        expireDate_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 expireDate = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpireDate() {
        bitField0_ = (bitField0_ & ~0x00002000);
        expireDate_ = 0L;
        onChanged();
        return this;
      }

      private float openPrice_ ;
      /**
       * <code>float openPrice = 15;</code>
       * @return The openPrice.
       */
      @java.lang.Override
      public float getOpenPrice() {
        return openPrice_;
      }
      /**
       * <code>float openPrice = 15;</code>
       * @param value The openPrice to set.
       * @return This builder for chaining.
       */
      public Builder setOpenPrice(float value) {

        openPrice_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>float openPrice = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpenPrice() {
        bitField0_ = (bitField0_ & ~0x00004000);
        openPrice_ = 0F;
        onChanged();
        return this;
      }

      private float previousClose_ ;
      /**
       * <code>float previousClose = 16;</code>
       * @return The previousClose.
       */
      @java.lang.Override
      public float getPreviousClose() {
        return previousClose_;
      }
      /**
       * <code>float previousClose = 16;</code>
       * @param value The previousClose to set.
       * @return This builder for chaining.
       */
      public Builder setPreviousClose(float value) {

        previousClose_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>float previousClose = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreviousClose() {
        bitField0_ = (bitField0_ & ~0x00008000);
        previousClose_ = 0F;
        onChanged();
        return this;
      }

      private float strikePrice_ ;
      /**
       * <code>float strikePrice = 17;</code>
       * @return The strikePrice.
       */
      @java.lang.Override
      public float getStrikePrice() {
        return strikePrice_;
      }
      /**
       * <code>float strikePrice = 17;</code>
       * @param value The strikePrice to set.
       * @return This builder for chaining.
       */
      public Builder setStrikePrice(float value) {

        strikePrice_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>float strikePrice = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrikePrice() {
        bitField0_ = (bitField0_ & ~0x00010000);
        strikePrice_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object underlyingSymbol_ = "";
      /**
       * <code>string underlyingSymbol = 18;</code>
       * @return The underlyingSymbol.
       */
      public java.lang.String getUnderlyingSymbol() {
        java.lang.Object ref = underlyingSymbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          underlyingSymbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string underlyingSymbol = 18;</code>
       * @return The bytes for underlyingSymbol.
       */
      public com.google.protobuf.ByteString
          getUnderlyingSymbolBytes() {
        java.lang.Object ref = underlyingSymbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          underlyingSymbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string underlyingSymbol = 18;</code>
       * @param value The underlyingSymbol to set.
       * @return This builder for chaining.
       */
      public Builder setUnderlyingSymbol(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        underlyingSymbol_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>string underlyingSymbol = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnderlyingSymbol() {
        underlyingSymbol_ = getDefaultInstance().getUnderlyingSymbol();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }
      /**
       * <code>string underlyingSymbol = 18;</code>
       * @param value The bytes for underlyingSymbol to set.
       * @return This builder for chaining.
       */
      public Builder setUnderlyingSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        underlyingSymbol_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }

      private long openInterest_ ;
      /**
       * <code>sint64 openInterest = 19;</code>
       * @return The openInterest.
       */
      @java.lang.Override
      public long getOpenInterest() {
        return openInterest_;
      }
      /**
       * <code>sint64 openInterest = 19;</code>
       * @param value The openInterest to set.
       * @return This builder for chaining.
       */
      public Builder setOpenInterest(long value) {

        openInterest_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 openInterest = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpenInterest() {
        bitField0_ = (bitField0_ & ~0x00040000);
        openInterest_ = 0L;
        onChanged();
        return this;
      }

      private int optionsType_ = 0;
      /**
       * <code>.PricingData.OptionType optionsType = 20;</code>
       * @return The enum numeric value on the wire for optionsType.
       */
      @java.lang.Override public int getOptionsTypeValue() {
        return optionsType_;
      }
      /**
       * <code>.PricingData.OptionType optionsType = 20;</code>
       * @param value The enum numeric value on the wire for optionsType to set.
       * @return This builder for chaining.
       */
      public Builder setOptionsTypeValue(int value) {
        optionsType_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>.PricingData.OptionType optionsType = 20;</code>
       * @return The optionsType.
       */
      @java.lang.Override
      public PricingDataOuterClass.PricingData.OptionType getOptionsType() {
        PricingDataOuterClass.PricingData.OptionType result = PricingDataOuterClass.PricingData.OptionType.forNumber(optionsType_);
        return result == null ? PricingDataOuterClass.PricingData.OptionType.UNRECOGNIZED : result;
      }
      /**
       * <code>.PricingData.OptionType optionsType = 20;</code>
       * @param value The optionsType to set.
       * @return This builder for chaining.
       */
      public Builder setOptionsType(PricingDataOuterClass.PricingData.OptionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        optionsType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.PricingData.OptionType optionsType = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionsType() {
        bitField0_ = (bitField0_ & ~0x00080000);
        optionsType_ = 0;
        onChanged();
        return this;
      }

      private long miniOption_ ;
      /**
       * <code>sint64 miniOption = 21;</code>
       * @return The miniOption.
       */
      @java.lang.Override
      public long getMiniOption() {
        return miniOption_;
      }
      /**
       * <code>sint64 miniOption = 21;</code>
       * @param value The miniOption to set.
       * @return This builder for chaining.
       */
      public Builder setMiniOption(long value) {

        miniOption_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 miniOption = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearMiniOption() {
        bitField0_ = (bitField0_ & ~0x00100000);
        miniOption_ = 0L;
        onChanged();
        return this;
      }

      private long lastSize_ ;
      /**
       * <code>sint64 lastSize = 22;</code>
       * @return The lastSize.
       */
      @java.lang.Override
      public long getLastSize() {
        return lastSize_;
      }
      /**
       * <code>sint64 lastSize = 22;</code>
       * @param value The lastSize to set.
       * @return This builder for chaining.
       */
      public Builder setLastSize(long value) {

        lastSize_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 lastSize = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastSize() {
        bitField0_ = (bitField0_ & ~0x00200000);
        lastSize_ = 0L;
        onChanged();
        return this;
      }

      private float bid_ ;
      /**
       * <code>float bid = 23;</code>
       * @return The bid.
       */
      @java.lang.Override
      public float getBid() {
        return bid_;
      }
      /**
       * <code>float bid = 23;</code>
       * @param value The bid to set.
       * @return This builder for chaining.
       */
      public Builder setBid(float value) {

        bid_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>float bid = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearBid() {
        bitField0_ = (bitField0_ & ~0x00400000);
        bid_ = 0F;
        onChanged();
        return this;
      }

      private long bidSize_ ;
      /**
       * <code>sint64 bidSize = 24;</code>
       * @return The bidSize.
       */
      @java.lang.Override
      public long getBidSize() {
        return bidSize_;
      }
      /**
       * <code>sint64 bidSize = 24;</code>
       * @param value The bidSize to set.
       * @return This builder for chaining.
       */
      public Builder setBidSize(long value) {

        bidSize_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 bidSize = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearBidSize() {
        bitField0_ = (bitField0_ & ~0x00800000);
        bidSize_ = 0L;
        onChanged();
        return this;
      }

      private float ask_ ;
      /**
       * <code>float ask = 25;</code>
       * @return The ask.
       */
      @java.lang.Override
      public float getAsk() {
        return ask_;
      }
      /**
       * <code>float ask = 25;</code>
       * @param value The ask to set.
       * @return This builder for chaining.
       */
      public Builder setAsk(float value) {

        ask_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>float ask = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearAsk() {
        bitField0_ = (bitField0_ & ~0x01000000);
        ask_ = 0F;
        onChanged();
        return this;
      }

      private long askSize_ ;
      /**
       * <code>sint64 askSize = 26;</code>
       * @return The askSize.
       */
      @java.lang.Override
      public long getAskSize() {
        return askSize_;
      }
      /**
       * <code>sint64 askSize = 26;</code>
       * @param value The askSize to set.
       * @return This builder for chaining.
       */
      public Builder setAskSize(long value) {

        askSize_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 askSize = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearAskSize() {
        bitField0_ = (bitField0_ & ~0x02000000);
        askSize_ = 0L;
        onChanged();
        return this;
      }

      private long priceHint_ ;
      /**
       * <code>sint64 priceHint = 27;</code>
       * @return The priceHint.
       */
      @java.lang.Override
      public long getPriceHint() {
        return priceHint_;
      }
      /**
       * <code>sint64 priceHint = 27;</code>
       * @param value The priceHint to set.
       * @return This builder for chaining.
       */
      public Builder setPriceHint(long value) {

        priceHint_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 priceHint = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriceHint() {
        bitField0_ = (bitField0_ & ~0x04000000);
        priceHint_ = 0L;
        onChanged();
        return this;
      }

      private long vol24Hr_ ;
      /**
       * <code>sint64 vol_24hr = 28;</code>
       * @return The vol24hr.
       */
      @java.lang.Override
      public long getVol24Hr() {
        return vol24Hr_;
      }
      /**
       * <code>sint64 vol_24hr = 28;</code>
       * @param value The vol24hr to set.
       * @return This builder for chaining.
       */
      public Builder setVol24Hr(long value) {

        vol24Hr_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 vol_24hr = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearVol24Hr() {
        bitField0_ = (bitField0_ & ~0x08000000);
        vol24Hr_ = 0L;
        onChanged();
        return this;
      }

      private long volAllCurrencies_ ;
      /**
       * <code>sint64 volAllCurrencies = 29;</code>
       * @return The volAllCurrencies.
       */
      @java.lang.Override
      public long getVolAllCurrencies() {
        return volAllCurrencies_;
      }
      /**
       * <code>sint64 volAllCurrencies = 29;</code>
       * @param value The volAllCurrencies to set.
       * @return This builder for chaining.
       */
      public Builder setVolAllCurrencies(long value) {

        volAllCurrencies_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 volAllCurrencies = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearVolAllCurrencies() {
        bitField0_ = (bitField0_ & ~0x10000000);
        volAllCurrencies_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object fromcurrency_ = "";
      /**
       * <code>string fromcurrency = 30;</code>
       * @return The fromcurrency.
       */
      public java.lang.String getFromcurrency() {
        java.lang.Object ref = fromcurrency_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fromcurrency_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fromcurrency = 30;</code>
       * @return The bytes for fromcurrency.
       */
      public com.google.protobuf.ByteString
          getFromcurrencyBytes() {
        java.lang.Object ref = fromcurrency_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fromcurrency_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fromcurrency = 30;</code>
       * @param value The fromcurrency to set.
       * @return This builder for chaining.
       */
      public Builder setFromcurrency(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fromcurrency_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>string fromcurrency = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromcurrency() {
        fromcurrency_ = getDefaultInstance().getFromcurrency();
        bitField0_ = (bitField0_ & ~0x20000000);
        onChanged();
        return this;
      }
      /**
       * <code>string fromcurrency = 30;</code>
       * @param value The bytes for fromcurrency to set.
       * @return This builder for chaining.
       */
      public Builder setFromcurrencyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fromcurrency_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }

      private java.lang.Object lastMarket_ = "";
      /**
       * <code>string lastMarket = 31;</code>
       * @return The lastMarket.
       */
      public java.lang.String getLastMarket() {
        java.lang.Object ref = lastMarket_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastMarket_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string lastMarket = 31;</code>
       * @return The bytes for lastMarket.
       */
      public com.google.protobuf.ByteString
          getLastMarketBytes() {
        java.lang.Object ref = lastMarket_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastMarket_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string lastMarket = 31;</code>
       * @param value The lastMarket to set.
       * @return This builder for chaining.
       */
      public Builder setLastMarket(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        lastMarket_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }
      /**
       * <code>string lastMarket = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastMarket() {
        lastMarket_ = getDefaultInstance().getLastMarket();
        bitField0_ = (bitField0_ & ~0x40000000);
        onChanged();
        return this;
      }
      /**
       * <code>string lastMarket = 31;</code>
       * @param value The bytes for lastMarket to set.
       * @return This builder for chaining.
       */
      public Builder setLastMarketBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        lastMarket_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }

      private double circulatingSupply_ ;
      /**
       * <code>double circulatingSupply = 32;</code>
       * @return The circulatingSupply.
       */
      @java.lang.Override
      public double getCirculatingSupply() {
        return circulatingSupply_;
      }
      /**
       * <code>double circulatingSupply = 32;</code>
       * @param value The circulatingSupply to set.
       * @return This builder for chaining.
       */
      public Builder setCirculatingSupply(double value) {

        circulatingSupply_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>double circulatingSupply = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearCirculatingSupply() {
        bitField0_ = (bitField0_ & ~0x80000000);
        circulatingSupply_ = 0D;
        onChanged();
        return this;
      }

      private double marketcap_ ;
      /**
       * <code>double marketcap = 33;</code>
       * @return The marketcap.
       */
      @java.lang.Override
      public double getMarketcap() {
        return marketcap_;
      }
      /**
       * <code>double marketcap = 33;</code>
       * @param value The marketcap to set.
       * @return This builder for chaining.
       */
      public Builder setMarketcap(double value) {

        marketcap_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double marketcap = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarketcap() {
        bitField1_ = (bitField1_ & ~0x00000001);
        marketcap_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PricingData)
    }

    // @@protoc_insertion_point(class_scope:PricingData)
    private static final PricingDataOuterClass.PricingData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PricingDataOuterClass.PricingData();
    }

    public static PricingDataOuterClass.PricingData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PricingData>
        PARSER = new com.google.protobuf.AbstractParser<PricingData>() {
      @java.lang.Override
      public PricingData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PricingData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PricingData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public PricingDataOuterClass.PricingData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PricingData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PricingData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021PricingData.proto\"\327\010\n\013PricingData\022\n\n\002i" +
      "d\030\001 \001(\t\022\r\n\005price\030\002 \001(\002\022\014\n\004time\030\003 \001(\022\022\020\n\010" +
      "currency\030\004 \001(\t\022\020\n\010exchange\030\005 \001(\t\022)\n\tquot" +
      "eType\030\006 \001(\0162\026.PricingData.QuoteType\0221\n\013m" +
      "arketHours\030\007 \001(\0162\034.PricingData.MarketHou" +
      "rsType\022\025\n\rchangePercent\030\010 \001(\002\022\021\n\tdayVolu" +
      "me\030\t \001(\022\022\017\n\007dayHigh\030\n \001(\002\022\016\n\006dayLow\030\013 \001(" +
      "\002\022\016\n\006change\030\014 \001(\002\022\021\n\tshortName\030\r \001(\t\022\022\n\n" +
      "expireDate\030\016 \001(\022\022\021\n\topenPrice\030\017 \001(\002\022\025\n\rp" +
      "reviousClose\030\020 \001(\002\022\023\n\013strikePrice\030\021 \001(\002\022" +
      "\030\n\020underlyingSymbol\030\022 \001(\t\022\024\n\014openInteres" +
      "t\030\023 \001(\022\022,\n\013optionsType\030\024 \001(\0162\027.PricingDa" +
      "ta.OptionType\022\022\n\nminiOption\030\025 \001(\022\022\020\n\010las" +
      "tSize\030\026 \001(\022\022\013\n\003bid\030\027 \001(\002\022\017\n\007bidSize\030\030 \001(" +
      "\022\022\013\n\003ask\030\031 \001(\002\022\017\n\007askSize\030\032 \001(\022\022\021\n\tprice" +
      "Hint\030\033 \001(\022\022\020\n\010vol_24hr\030\034 \001(\022\022\030\n\020volAllCu" +
      "rrencies\030\035 \001(\022\022\024\n\014fromcurrency\030\036 \001(\t\022\022\n\n" +
      "lastMarket\030\037 \001(\t\022\031\n\021circulatingSupply\030  " +
      "\001(\001\022\021\n\tmarketcap\030! \001(\001\"\200\002\n\tQuoteType\022\010\n\004" +
      "NONE\020\000\022\r\n\tALTSYMBOL\020\005\022\r\n\tHEARTBEAT\020\007\022\n\n\006" +
      "EQUITY\020\010\022\t\n\005INDEX\020\t\022\016\n\nMUTUALFUND\020\013\022\017\n\013M" +
      "ONEYMARKET\020\014\022\n\n\006OPTION\020\r\022\014\n\010CURRENCY\020\016\022\013" +
      "\n\007WARRANT\020\017\022\010\n\004BOND\020\021\022\n\n\006FUTURE\020\022\022\007\n\003ETF" +
      "\020\024\022\r\n\tCOMMODITY\020\027\022\014\n\010ECNQUOTE\020\034\022\022\n\016CRYPT" +
      "OCURRENCY\020)\022\r\n\tINDICATOR\020*\022\r\n\010INDUSTRY\020\350" +
      "\007\"\037\n\nOptionType\022\010\n\004CALL\020\000\022\007\n\003PUT\020\001\"a\n\017Ma" +
      "rketHoursType\022\016\n\nPRE_MARKET\020\000\022\022\n\016REGULAR" +
      "_MARKET\020\001\022\017\n\013POST_MARKET\020\002\022\031\n\025EXTENDED_H" +
      "OURS_MARKET\020\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_PricingData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PricingData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PricingData_descriptor,
        new java.lang.String[] { "Id", "Price", "Time", "Currency", "Exchange", "QuoteType", "MarketHours", "ChangePercent", "DayVolume", "DayHigh", "DayLow", "Change", "ShortName", "ExpireDate", "OpenPrice", "PreviousClose", "StrikePrice", "UnderlyingSymbol", "OpenInterest", "OptionsType", "MiniOption", "LastSize", "Bid", "BidSize", "Ask", "AskSize", "PriceHint", "Vol24Hr", "VolAllCurrencies", "Fromcurrency", "LastMarket", "CirculatingSupply", "Marketcap", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
